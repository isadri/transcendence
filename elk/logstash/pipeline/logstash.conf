input {
	file {
		path => "/var/log/nginx/access.log"
		tags => [ "nginx" ]
	}
    tcp {
        port => "${LOGSTASH_TCP_PORT}"
        ssl_enabled => true
        ssl_certificate => "/usr/share/logstash/config/certs/logstash/logstash.crt"
        ssl_key => "/usr/share/logstash/config/certs/logstash/logstash.key"
        ssl_certificate_authorities => "/usr/share/logstash/config/certs/ca/ca.crt"
        codec => "json"
        tags => [ "django" ]
    }
}

filter {
	mutate {
		remove_field => [ "@version" ]
	}
	if "nginx" in [tags] {
		grok {
			match => {
				"message" => "%{IP:client} - %{DATA:remote_user} \[%{HTTPDATE:time_local}\] \"%{WORD:method} %{DATA:url} %{WORD:protocol}/%{NUMBER:http_version}\" %{NUMBER:status_code} %{NUMBER:body_sent} \"%{DATA:referrer}\" \"%{DATA:user_agent}\""
			}
		}
	}
}

output {
    if "django" in [tags] {
        elasticsearch {
            hosts => [ "https://es01:9200", "https://es02:9200" ]
            user => "elastic"
            password => "${ELASTIC_PASSWORD}"
            index => "logs-django-dev"
			action => "create"
            ssl_enabled => true
            ssl_certificate_authorities => "/usr/share/logstash/config/certs/ca/ca.crt"
        }
    }
	if "nginx" in [tags] {
		elasticsearch {
			hosts => [ "https://es01:9200", "https://es02:9200"]
			user => "elastic"
			password => "${ELASTIC_PASSWORD}"
			index => "logs-nginx.access-dev"
			action => "create"
			ssl_enabled => true
			ssl_certificate_authorities => "/usr/share/logstash/config/certs/ca/ca.crt"
		}
	}
}

