networks:
  app-network:

volumes:
  postgres_data:
  modules_files:

services:
  back-end:
    container_name: backend
    command: python manage.py runserver 0:8000
    image: backend
    build:
      context: backend
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/code
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - postgres
    restart: on-failure

  front-end:
   container_name: frontend
   image: frontend
   build: ./frontend
   ports:
     - 5000:5000
   volumes:
     - ./frontend:/code/
     - modules_files:/code/node_modules
   networks:
     - app-network
   depends_on:
     - back-end
   restart: on-failure

  postgres:
    container_name: postgres
    image: postgres:17beta1
    volumes:
      - postgres_data:/var/lib/posgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    env_file:
      - .env
    networks:
      - app-network
    restart: on-failure
