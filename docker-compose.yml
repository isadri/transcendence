networks:
  app-network:

volumes:
  postgres_data:
  modules_files:

services:
  nginx:
    container_name: nginx
    image: nginx
    build:
      context: nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - app-network
    depends_on:
      - front-end
      - back-end
    env_file:
      - .env
    restart: on-failure

  back-end:
    container_name: backend
    image: backend
    build:
      context: backend
    ports:
      - 8000:8000
    volumes:
      - ./backend/:/code
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - postgres
    restart: on-failure

  front-end:
    container_name: frontend
    image: frontend
    build: ./frontend
    ports:
      - 5000:5000
    volumes:
      - ./frontend:/code/
      - modules_files:/code/node_modules
    networks:
      - app-network
    depends_on:
      - back-end
    restart: on-failure

  postgres:
    container_name: postgres
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/posgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    env_file:
      - .env
    networks:
      - app-network
    restart: on-failure

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   env_file:
  #     - .env
  #   networks:
  #     - app-network
  #   restart: on-failure